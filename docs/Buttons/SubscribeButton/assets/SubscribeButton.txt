participant App
participant SDL
participant HMI
note over App,HMI:<align:center> **//Preconditions://** 1. Application is successfully registered, the status is active or in background on HMI\n2. The request is valid and allowed by SDL Policy Manager\n3. Application can be subscribed to <buttonName>
App->SDL:SubscribeButton (<appID>, <buttonName>)  
SDL->HMI:Buttons.SubscribeButton (<appID>, <buttonName>) 
SDL->SDL:<align:center>Start <DefaultTimeout>\n(the value defined at //.ini file//)
opt App gets subscribed to <buttonName> during <DefaultTimeout>
note over SDL:<align:center><DefaultTimeout>\nis NOT expired yet
SDL<<--HMI:Buttons.SubscribeButton (SUCCESS, success: true)
App<<--SDL:SubscribeButton (SUCCESS, success: true)
end
opt Error Flow
opt HMI does not respond during <DefaultTimeout>
App->SDL Buttons.SubscribeButton
note over SDL:<align:center><DefaultTimeout>\nIS expired
App<<--SDL:SubscribeButton (GENERIC_ERROR, success: false)
end
opt HMI responds after <DefaultTimeout> is expired
note over SDL:<align:center><DefaultTimeout>\nIS expired
App<<--SDL:SubscribeButton (GENERIC_ERROR, success: false)
SDL<<--HMI:Buttons.SubscribeButton (SUCCESS, success: true)
SDL->HMI:Buttons.UnsubscribeButton (<buttonName>)
SDL<<--HMI:Buttons.UnsubscribeButton (SUCCESS, success: true)
end
end
opt Application subscribed to <buttonName> disconnects unexpectedly
note over App:Unexpected\ndisconnect
note over App:<align:center>App registers\nwith actual hashId
App->SDL: RAI
note over SDL: SDL performs resumption
SDL->HMI:Buttons.SubscribeButton (<appID>, <buttonName>)
SDL->SDL:<align:center>Start <DefaultTimeout>\n(the value defined at //.ini file//)
note over SDL:<align:center><DefaultTimeout>\nis NOT expired
SDL<<--HMI:Buttons.SubscribeButton (SUCCESS, success: true)
App<<--SDL:RAI(SUCCESS) 
end